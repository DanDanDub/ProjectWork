package it.danilo.projectwork.entity;
// Generated 3 lug 2024, 21:37:11 by Hibernate Tools 5.2.13.Final

import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.UniqueConstraint;

/**
 * Device generated by hbm2java
 */
@Entity
@Table(name = "device", catalog = "project_work", uniqueConstraints = @UniqueConstraint(columnNames = { "name",
		"id_city", "id_district" }))
public class Device implements java.io.Serializable {

	private Integer id;
	private City city;
	private District district;
	private String name;
	private Set<Status> statuses = new HashSet<Status>(0);

	public Device() {
	}

	public Device(City city, District district, String name) {
		this.city = city;
		this.district = district;
		this.name = name;
	}

	public Device(Integer id, City city, District district, String name, Set<Status> statuses) {
		this.id = id;
		this.city = city;
		this.district = district;
		this.name = name;
		this.statuses = statuses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_city", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_district", nullable = false)
	public District getDistrict() {
		return this.district;
	}

	public void setDistrict(District district) {
		this.district = district;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "device")
	public Set<Status> getStatuses() {
		return this.statuses;
	}

	public void setStatuses(Set<Status> statuses) {
		this.statuses = statuses;
	}

}
